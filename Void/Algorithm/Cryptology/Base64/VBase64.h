#pragma once
#ifndef _V_BASE64_H_
#define _V_BASE64_H_

#include <string>
#include <map>

//----------------------------------------------------------------------------------------------------
namespace Void
{
    // VBase64
    // ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
    //----------------------------------------------------------------------------------------------------
    class VBase64
    {
    public:
        //----------------------------------------------------------------------------------------------------
        VBase64();
        
        //----------------------------------------------------------------------------------------------------
        std::string Encode(const std::string& _target);
        
        //----------------------------------------------------------------------------------------------------
        std::string Decode(const std::string& _target);
        
    protected:
        //----------------------------------------------------------------------------------------------------
        void LoadAlphabet();
        std::string Bit8ToBit6(char _a, char _b, char _c);
        std::string Bit6ToBit8(char _a, char _b, char _c, char _d);
        
    protected:
        //----------------------------------------------------------------------------------------------------
        std::string mAlphabet;
        std::map<char, unsigned> mAlphabetMap;
    };
    
    // Test
    //----------------------------------------------------------------------------------------------------
    void VBase64Test();
}

#endif
