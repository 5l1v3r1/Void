#pragma once
#ifndef _V_WAVAUDIO_H_
#define _V_WAVAUDIO_H_

#include "../../../Memory/SmartPointer/VSmartPointer.h"
#include <vector>

//----------------------------------------------------------------------------------------------------
namespace Void
{
    #pragma pack(push, 2)
    // VWAVAudioChunk
    //----------------------------------------------------------------------------------------------------
    struct VWAVAudioChunk
    {
        //----------------------------------------------------------------------------------------------------
        char fourCC[4];
        unsigned int size;
    };
    
    // VWAVAudioFormatData
    // 2 + 2 + 4 + 4 + 2 + 2 + (2) = 16 + (2)
    //----------------------------------------------------------------------------------------------------
    struct VWAVAudioFormatData
    {
        //----------------------------------------------------------------------------------------------------
        VWAVAudioFormatData()
            :
            extraSize(0)
        {
        }
        
        //----------------------------------------------------------------------------------------------------
        unsigned short formatTag;
        unsigned short channels;
        unsigned int samplesPerSec;
        unsigned int bytesPerSec;
        unsigned short blockAlign;
        unsigned short bitsPerSample;
        unsigned short extraSize;
    };
    #pragma pack(pop)
    
    // VWAVAudio
    //----------------------------------------------------------------------------------------------------
    // RIFF Chunk | FourCC (RIFF)
    //            |---------------------------------------------------------------------------------------
    //            | Size
    //            |---------------------------------------------------------------------------------------
    //            | FormType (WAVE)
    //            |---------------------------------------------------------------------------------------
    //            | Format Chunk | FourCC (fmt)
    //            |              |------------------------------------------------------------------------
    //            |              | Size
    //            |              |------------------------------------------------------------------------
    //            |              | FormatTag
    //            |              |------------------------------------------------------------------------
    //            |              | Channels
    //            |              |------------------------------------------------------------------------
    //            |              | SamplesPerSec
    //            |              |------------------------------------------------------------------------
    //            |              | BytesPerSec
    //            |              |------------------------------------------------------------------------
    //            |              | BlockAlign
    //            |              |------------------------------------------------------------------------
    //            |              | BitsPerSample
    //            |              |------------------------------------------------------------------------
    //            |              | ExtraSize
    //            |---------------------------------------------------------------------------------------
    //            | Fact Chunk | FourCC (fact)
    //            | (option)   |--------------------------------------------------------------------------
    //            |            | Size
    //            |            |--------------------------------------------------------------------------
    //            |            | SampleCount
    //            |---------------------------------------------------------------------------------------
    //            | Data Chunk | FourCC (data)
    //            |            |--------------------------------------------------------------------------
    //            |            | Size
    //            |            |--------------------------------------------------------------------------
    //            |            | Data
    //----------------------------------------------------------------------------------------------------
    class VWAVAudio
    {
    public:
        //----------------------------------------------------------------------------------------------------
        VWAVAudio();
        VWAVAudio(const VWAVAudio& _audio);
        virtual ~VWAVAudio();
        
        //----------------------------------------------------------------------------------------------------
        bool ReadFromFile(const char* _fileName);
        bool WriteToFile(const char* _fileName);
        
    protected:
        //----------------------------------------------------------------------------------------------------
        bool IsFourCC(char _value[4], char _first, char _second, char _third, char _fourth);
        std::string BinaryString(int _value);
        
    protected:
        //----------------------------------------------------------------------------------------------------
        VWAVAudioFormatData mFormat;
        std::vector<char> mData;
    };
    
    // Test
    //----------------------------------------------------------------------------------------------------
    void VWAVAudioTest();
}

#endif
